/**
 * Cielo24
 * The cielo24 Web Services Platform API allows developers to easily integrate transcription, captioning and keyword extraction into their applications without having to use a manual web portal.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: devs@cielo24.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IWPEnum } from './IWPEnum';
import { HttpFile } from '../http/http';

export class JobOptions {
    /**
    * Requires your approval of a job at specified points in the workflow. When the job is ready for approval you will be emailed a link that will take you to a web based tool you can use to view, edit and approve the job. You may request approval at two points in the workflow: before translation and before the job is returned.
    */
    'customerApprovalSteps'?: Array<JobOptionsCustomerApprovalStepsEnum>;
    /**
    * Determines which web based tool to use for viewing, editing and approving jobs.
    */
    'customerApprovalTool'?: JobOptionsCustomerApprovalToolEnum;
    /**
    * A JSON dictionary of key value pairs. These will be used as substitution strings when building the callback URL and custom DFXP caption header.
    */
    'customMetadata'?: any;
    /**
    * Allows you to provide text that will be displayed to the transcriber when the job is processed. An HTML included will be escaped.
    */
    'notes'?: any;
    /**
    * Allows you to receive additional callbacks when interim versions of the job are completed. If you specified a callback_url, then a callback will sent for FINAL regardless of the value of this option.
    */
    'returnIwp'?: Array<IWPEnum>;
    /**
    * Requests that media intelligence be generated for the specified interim/final versions of the transcript. Media intelligence data is added to the ElementList and can be retrieve using the get_elementlist API call. See [ElementList](https://cielo24.readthedocs.io/en/latest/output_formats/elementlist.html#media-intelligence-label) for details.
    */
    'generateMediaIntelligenceIwp'?: Array<IWPEnum>;
    /**
    * Requests that speaker names be identified.
    */
    'speakerId'?: JobOptionsSpeakerIdEnum;
    /**
    * Requests that all noises and sounds be identified.
    */
    'audioDescription'?: JobOptionsAudioDescriptionEnum;
    /**
    * Requests that any text that appears in the media be added to the transcription.
    */
    'onScreenText'?: JobOptionsOnScreenTextEnum;
    /**
    * Requests that lyrics to songs be transcribed instead of labeled [MUSIC].
    */
    'musicLyrics'?: JobOptionsMusicLyricsEnum;
    /**
    * Requests that transcribers follow submitted instruction set.
    */
    'customSpecialHandling'?: JobOptionsCustomSpecialHandlingEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "customerApprovalSteps",
            "baseName": "customer_approval_steps",
            "type": "Array<JobOptionsCustomerApprovalStepsEnum>",
            "format": ""
        },
        {
            "name": "customerApprovalTool",
            "baseName": "customer_approval_tool",
            "type": "JobOptionsCustomerApprovalToolEnum",
            "format": ""
        },
        {
            "name": "customMetadata",
            "baseName": "custom_metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "any",
            "format": ""
        },
        {
            "name": "returnIwp",
            "baseName": "return_iwp",
            "type": "Array<IWPEnum>",
            "format": ""
        },
        {
            "name": "generateMediaIntelligenceIwp",
            "baseName": "generate_media_intelligence_iwp",
            "type": "Array<IWPEnum>",
            "format": ""
        },
        {
            "name": "speakerId",
            "baseName": "speaker_id",
            "type": "JobOptionsSpeakerIdEnum",
            "format": ""
        },
        {
            "name": "audioDescription",
            "baseName": "audio_description",
            "type": "JobOptionsAudioDescriptionEnum",
            "format": ""
        },
        {
            "name": "onScreenText",
            "baseName": "on_screen_text",
            "type": "JobOptionsOnScreenTextEnum",
            "format": ""
        },
        {
            "name": "musicLyrics",
            "baseName": "music_lyrics",
            "type": "JobOptionsMusicLyricsEnum",
            "format": ""
        },
        {
            "name": "customSpecialHandling",
            "baseName": "custom_special_handling",
            "type": "JobOptionsCustomSpecialHandlingEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return JobOptions.attributeTypeMap;
    }

    public constructor() {
    }
}


export type JobOptionsCustomerApprovalStepsEnum = "TRANSLATION" | "RETURN" ;
export type JobOptionsCustomerApprovalToolEnum = "AMARA" | "CIELO24" ;
export type JobOptionsSpeakerIdEnum = "true" | "false" ;
export type JobOptionsAudioDescriptionEnum = "true" | "false" ;
export type JobOptionsOnScreenTextEnum = "true" | "false" ;
export type JobOptionsMusicLyricsEnum = "true" | "false" ;
export type JobOptionsCustomSpecialHandlingEnum = "true" | "false" ;

